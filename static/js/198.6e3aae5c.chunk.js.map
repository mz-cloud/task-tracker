{"version":3,"file":"static/js/198.6e3aae5c.chunk.js","mappings":"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","sources":["pages/tasks/styles.js","pages/tasks/index.js"],"sourcesContent":["import { Box, Card, Page, Text } from \"grommet\";\nimport { Clear, FormClose, Notification } from \"grommet-icons\";\nimport { normalizeColor } from \"grommet/utils\";\nimport styled from \"styled-components\";\n\nexport const StyledPage = styled(Page)`\n\tpadding: 0px 20px;\n`;\n\nexport const StyledCard = styled(Card)`\n\tpadding-top: 0px;\n\tpadding-bottom: 10px;\n\tpadding-left: 20px;\n\tpadding-right: 20px;\n`;\n\nexport const StyledShowMore = styled.svg`\n\tcursor: pointer;\n\tmargin-top: auto;\n\tmargin-bottom: auto;\n\t:hover {\n\t\ttransition: stroke 0.1s linear;\n\t\tstroke: ${({ theme }) => normalizeColor(\"neutral-2\", theme)};\n\t}\n`;\n\nexport const StyledTaskDate = styled(Text)``;\nexport const StyledTaskReminderEnabled = styled(Notification)`\n\tmargin-left: 8px;\n`;\nexport const StyledTaskDescription = styled(Text)`\n\tmargin-top: 0px;\n\tmargin-bottom: 10px;\n\tmargin-left: 0px;\n\tmargin-right: 0px;\n`;\nexport const StyledTaskRemove = styled(FormClose)`\n\tcursor: pointer;\n\tmargin-top: auto;\n\tmargin-bottom: auto;\n\tmargin-left: 5px;\n\t:hover {\n\t\ttransition: stroke 0.1s linear;\n\t\tstroke: ${({ theme }) => normalizeColor(\"status-critical\", theme)};\n\t}\n`;\nexport const StyledIconsWrapper = styled(Box)`\n\tmargin-top: auto;\n\tmargin-bottom: auto;\n\tmargin-left: auto;\n\tpadding: 0px;\n`;\nexport const StyledTaskTitle = styled.h4`\n\tmargin: 5px 0px;\n`;\nexport const StyledTaskBox = styled(Box)`\n\tpadding-top: 5px;\n\tpadding-bottom: 5px;\n\tpadding-left: 20px;\n\tpadding-right: 10px;\n`;\nexport const StyledTaskWrapper = styled(Box)`\n\t${StyledTaskBox}:not(:last-child) {\n\t\tmargin-bottom: 5px;\n\t}\n`;\nexport const StyledClearTasks = styled(Clear)`\n\tcursor: pointer;\n\tmargin-right: 5px;\n\t:hover {\n\t\ttransition: stroke 0.1s linear;\n\t\tstroke: ${({ theme }) => normalizeColor(\"status-critical\", theme)};\n\t}\n`;\n","import {\n\tBox,\n\tButton,\n\tCardBody,\n\tCardHeader,\n\tCheckBox,\n\tCollapsible,\n\tDateInput,\n\tFormField,\n\tGrid,\n\tHeading,\n\tTextArea,\n\tTextInput\n} from \"grommet\";\nimport { Contract, Expand } from \"grommet-icons\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addTask, clearTasks, removeTask } from \"../../state/store\";\nimport {\n\tStyledCard,\n\tStyledClearTasks,\n\tStyledIconsWrapper,\n\tStyledPage,\n\tStyledShowMore,\n\tStyledTaskBox,\n\tStyledTaskDate,\n\tStyledTaskDescription,\n\tStyledTaskReminderEnabled,\n\tStyledTaskRemove,\n\tStyledTaskTitle,\n\tStyledTaskWrapper\n} from \"./styles\";\n\nconst TaskEntry = (props) => {\n\tconst dispatch = useDispatch();\n\tconst [showMore, setShowMore] = useState(false);\n\tconst task = props.task;\n\tconst title = task.title.length > 25 ? `${task.title.substring(0, 25)}...` : task.title;\n\treturn (\n\t\t<StyledTaskBox background=\"light-4\" fill=\"horizontal\">\n\t\t\t<Box fill=\"horizontal\" direction=\"row\">\n\t\t\t\t<StyledTaskTitle>{title}</StyledTaskTitle>\n\t\t\t\t<StyledIconsWrapper direction=\"row\">\n\t\t\t\t\t<StyledShowMore\n\t\t\t\t\t\tas={showMore ? Contract : Expand}\n\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\tonClick={() => setShowMore(!showMore)}\n\t\t\t\t\t/>\n\t\t\t\t\t<StyledTaskRemove\n\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tdispatch(removeTask(props.id));\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</StyledIconsWrapper>\n\t\t\t</Box>\n\t\t\t<Collapsible open={showMore}>\n\t\t\t\t<StyledTaskDate>\n\t\t\t\t\t{new Date(task.date).toLocaleDateString()}\n\t\t\t\t\t{task.reminder && <StyledTaskReminderEnabled size=\"small\" />}\n\t\t\t\t</StyledTaskDate>\n\t\t\t\t<StyledTaskDescription>{task.description}</StyledTaskDescription>\n\t\t\t</Collapsible>\n\t\t</StyledTaskBox>\n\t);\n};\n\nconst CurrentTasks = () => {\n\tconst tasks = useSelector((state) => state.tasks);\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<div>\n\t\t\t<CardHeader>\n\t\t\t\t<Heading level={3}>Current Tasks</Heading>\n\t\t\t\t<StyledClearTasks onClick={() => dispatch(clearTasks())} />\n\t\t\t</CardHeader>\n\t\t\t<CardBody>\n\t\t\t\t<StyledTaskWrapper>\n\t\t\t\t\t{tasks.map((task, index) => (\n\t\t\t\t\t\t<TaskEntry key={index} id={index} task={task} />\n\t\t\t\t\t))}\n\t\t\t\t</StyledTaskWrapper>\n\t\t\t</CardBody>\n\t\t</div>\n\t);\n};\n\nconst TaskForm = () => {\n\tconst dispatch = useDispatch();\n\tconst [inputs, setInputs] = useState({\n\t\ttitle: \"\",\n\t\tdescription: \"\",\n\t\tdate: new Date(Date.now()).toISOString(),\n\t\treminder: false,\n\t});\n\n\tconst clearForm = () =>\n\t\tsetInputs({\n\t\t\ttitle: \"\",\n\t\t\tdescription: \"\",\n\t\t\tdate: new Date(Date.now()).toISOString(),\n\t\t\treminder: false,\n\t\t});\n\n\tconst handleSubmit = () => {\n\t\tconsole.log(\"submit\");\n\t\tdispatch(addTask(inputs));\n\t\tclearForm();\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<CardHeader>\n\t\t\t\t<Heading level={3}>Add Tasks</Heading>\n\t\t\t</CardHeader>\n\t\t\t<CardBody>\n\t\t\t\t<FormField label=\"Title\" name=\"title\">\n\t\t\t\t\t<TextInput\n\t\t\t\t\t\tname=\"title\"\n\t\t\t\t\t\tvalue={inputs.title}\n\t\t\t\t\t\tonChange={({ target }) => setInputs({ ...inputs, title: target.value })}\n\t\t\t\t\t/>\n\t\t\t\t</FormField>\n\t\t\t\t<FormField label=\"Description\" name=\"description\">\n\t\t\t\t\t<TextArea\n\t\t\t\t\t\tplaceholder=\"type here\"\n\t\t\t\t\t\tvalue={inputs.description}\n\t\t\t\t\t\tresize=\"vertical\"\n\t\t\t\t\t\tonChange={({ target }) => setInputs({ ...inputs, description: target.value })}\n\t\t\t\t\t\tfill\n\t\t\t\t\t/>\n\t\t\t\t</FormField>\n\t\t\t\t<FormField label=\"Date\">\n\t\t\t\t\t<DateInput\n\t\t\t\t\t\tformat=\"mm/dd/yyyy\"\n\t\t\t\t\t\tvalue={inputs.date}\n\t\t\t\t\t\tonChange={({ value }) => setInputs({ ...inputs, date: value })}\n\t\t\t\t\t/>\n\t\t\t\t</FormField>\n\t\t\t\t<CheckBox\n\t\t\t\t\tlabel=\"Remind me?\"\n\t\t\t\t\tchecked={inputs.reminder}\n\t\t\t\t\tonChange={(event) => setInputs({ ...inputs, reminder: event.target.checked })}\n\t\t\t\t/>\n\t\t\t\t<Box direction=\"row\" gap=\"medium\" margin={{ top: \"20px\" }}>\n\t\t\t\t\t<Button label=\"Submit\" primary onClick={() => handleSubmit()} />\n\t\t\t\t\t<Button label=\"Reset\" onClick={() => clearForm()} />\n\t\t\t\t</Box>\n\t\t\t</CardBody>\n\t\t</div>\n\t);\n};\n\nconst TasksPage = () => {\n\treturn (\n\t\t<StyledPage kind=\"full\">\n\t\t\t<Grid\n\t\t\t\trows={[\"100%\", \"100%\"]}\n\t\t\t\tcolumns={[\"1fr\", \"1fr\"]}\n\t\t\t\tgap=\"medium\"\n\t\t\t\tareas={[\n\t\t\t\t\t{ name: \"nav\", start: [0, 0], end: [0, 0] },\n\t\t\t\t\t{ name: \"main\", start: [1, 0], end: [1, 0] },\n\t\t\t\t]}\n\t\t\t\tfill=\"horizontal\"\n\t\t\t>\n\t\t\t\t<StyledCard gridArea=\"nav\" background=\"light-2\">\n\t\t\t\t\t<CurrentTasks />\n\t\t\t\t</StyledCard>\n\t\t\t\t<StyledCard gridArea=\"main\" background=\"light-2\">\n\t\t\t\t\t<TaskForm />\n\t\t\t\t</StyledCard>\n\t\t\t</Grid>\n\t\t</StyledPage>\n\t);\n};\n\nexport default TasksPage;\n"],"names":["StyledPage","styled","Page","StyledCard","Card","StyledShowMore","theme","normalizeColor","StyledTaskDate","Text","StyledTaskReminderEnabled","Notification","StyledTaskDescription","StyledTaskRemove","FormClose","StyledIconsWrapper","Box","StyledTaskTitle","StyledTaskBox","StyledTaskWrapper","StyledClearTasks","Clear","TaskEntry","props","dispatch","useDispatch","useState","showMore","setShowMore","task","title","length","substring","background","fill","direction","as","Contract","Expand","size","onClick","removeTask","id","Collapsible","open","Date","date","toLocaleDateString","reminder","description","CurrentTasks","tasks","useSelector","state","CardHeader","Heading","level","clearTasks","CardBody","map","index","TaskForm","now","toISOString","inputs","setInputs","clearForm","FormField","label","name","TextInput","value","onChange","target","TextArea","placeholder","resize","DateInput","format","CheckBox","checked","event","gap","margin","top","Button","primary","console","log","addTask","kind","Grid","rows","columns","areas","start","end","gridArea"],"sourceRoot":""}